/*
ordre d'import : 
    1. Utils :
        1. Variables.
        2. Fonctions.
        3. Mixins.
        4. Placeholders.
    2. Feuilles de style de tiers (vendors) (si vous en avez).
    3. Base.
    4. Composants.
    5. Layout.
    6. Pages.
*/

@import "./utils/variables";
@import "./utils/fonctions";
@import "./utils/mixins";
@import "./base/normes";
@import "./components/keyframes";
// @import "./components/spinner";
@import "./utils/fonctions";

/* A FAIRE
/*modifier adresse git dans fichier json*/
/*régler taille des section, header, footer autrement qu'avec padding*/

/*A trier ensuite*/



header, footer {           /*border : 1px solid darken(map-get($color, background), 15%);*/

}
section {                              /*border : 1px solid purple;*/

}

/*media queries*/

@media screen and (min-width: map-get($breakpoints, desktop)) {

}

/*général*/
body {
                                    // border: 1px solid purple;
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 0 20px;
    @include desktopOnly {
                                            // border: 1px solid red;
        display: grid;
        grid-template-rows: 80px 330px 300px 20px;
		grid-template-columns: 1fr 1fr;
        padding: 0;
        align-items: start;
        justify-items: center; //? équivalent de space-envenly pour grid ?
        grid-gap: 20px;
		// grid-template-areas: 
        // "1 2 3"
        // "4 4 4"
        // "5 5 5";
    }

}
header {
                            // border: 1px solid goldenrod;
    padding: 20px 0;
    // grid-area: 1;
    grid-column: 1 / span 2;
    grid-row: 1;
    > .ligne {  /*pour menu*/            
        justify-content: center;
        /*padding: 0 54px;*/
        width: 350px;
        position: relative;
        &:hover > a p {
            transform: scale(1.2) rotate(180deg) translateX(20px);
        }
        &:hover > a svg:nth-child(3) {
            opacity: 1;
        }
        &:active > a svg:nth-child(3) {
            transform: scale(1.3);
        }
        &:active > a svg:nth-child(2) {
            transform: scale(1.3);
        }
        > a svg {
            height: 120%;
            width: 120%;
            position: relative;
            left: -3%;
            z-index: -1;
            &:nth-child(3) {
                position: absolute;
                top: 0;
                left: 9%; //*8.5 pour que ça soit pile dessus ou avec un décalage pour avoir un effet ombre
                height: 91%;
                width: 91%;
                opacity: 0;
            }
        }
        > a p {                           
            transform: rotate(180deg);
            font-size: map-get($size, big);
            position: absolute; //?why se positionne pas par rapport à .ligne ?
            top: 0px;
            left: 10px;
            transition: 400ms;
            margin: 0;
        }
    }
}
.explorer {        
                        //  border: 1px solid orange;
    // grid-area: 2;
    grid-column: 1;
    grid-row: 2;
    width: 100%;
    background-color: map-get($color, background);
    > .ligne {
        // border: 1px solid #000;
        justify-content: center;
        width: 100%;
        background-color: darken(map-get($color, background), 10%);
        box-shadow: inset 0px 10px 10px -10px darken(map-get($color, background), 50%);
        > p {
            font-family: map-get($weight, medium);
        }
    }
    > .colonne {
        padding: 45px;
        > h1 {                              /*border : 1px solid;*/
            text-align: center;
            
        }
        > p {                               
            // border : 1px solid blue;
            text-align: center;
        }
    }
}
.fonctionnement {        
                        //    border: 1px solid purple;
    // grid-area: 3;
    grid-column: 2;
    grid-row: 2;
    padding: 50px 10px;
    width: 100%;
    @include desktopOnly {
        padding: 0;
    }
    > h2 {
        align-self: flex-start;
    }
    > ol {
                                                // border: 1px solid #000;
        list-style: none;//!list-style pas assez de paramètres
        width: 80%; //*pour mettre des marges
        @include desktopOnly {
            width: 100%;
        }
        > li {                                   /*border: 1px solid orange;*/
            background-color: map-get($color, background);
            border-radius: 20px;
            padding: 20px;
            margin: 20px;
            justify-content: center;
            @include shadow;
            position: relative;
            cursor: pointer;
            @include desktopOnly {
                margin: 30px 50px;
            }
            &:hover > a span {
                background-color: map-get($color, secondary);
            }
            &:nth-child(3) a i {
                color: map-get($color, primary);
            }
            > a span {
                border-radius: 50%;
                background-color: map-get($color, primary);
                color: map-get($color, clair);
                padding: 3px 8px;
                position: absolute;
                top: 50%;
                transform: translateY(-50%);
                left: -12px;
                transition: 700ms;
            }
            > a i {
                color: darken(map-get($color, background), 50%);
            }
        }
    }
}
.restaurant {                                 
                                            // border: 1px solid purple;
    // grid-area: 4;
    grid-row: 3;
    grid-column: 1 / span 2;
    background: map-get($color, background);
    padding: 40px 20px;
    width: 100%;
    @include desktopOnly {
        display: flex;
        flex-direction: row;
        width: 100%;
        padding: 50px 0 20px 0;
        position: relative;
    }
    > h2 {  
        align-self: flex-start;
        @include desktopOnly {
            // transform: translate(-10px, 25px) rotate(-40deg);
            font-size: map-get($size, big);
            position: absolute;
            top : 10px;
            left : 10px;
        }
    }
    > .box {                                    
                                            // border: 1px solid orange;
        position: relative;
        border-radius: 20px;
        margin: 20px 0;
        background-color: map-get($color, clair);
        width: 95%;
        @include shadow;
        @include desktopOnly {
            width: 30%;
            margin: 10px;
        }
        > img {
            object-fit: cover;
            max-height: 200px;
            width : 100%;
            border-top-left-radius: 20px;
            border-top-right-radius: 20px;
            @include desktopOnly {
                max-height: 130px;
            }
        }
        > span {                              /*border : 1px solid red;*/
            position: absolute;
            top: 10px;
            right: 10px;
            background-color: map-get($color, tertiary);
            padding: 5px 10px;
            border-radius: 2px;
            color: darken(map-get($color, tertiary), 35%);
            font-weight: bold;
        
        }
        > .ligne {                                
                                                    // border: 1px solid red;
            // justify-content: space-between;
            padding: 10px 15px;
            > .colonne a {
                align-items: flex-start;
                > p {                               /*border : 1px solid blue;*/
                margin: 5px 0;
                }
            }
            
                /*&::after {
                    content: "";
                    position: absolute;
                    top: 0;
                    left: 0;
                    right: 0;
                    bottom: 0;
                    z-index: -1;
                    opacity: 1;
                    color: map-get($color, primary);
                }
                &:hover::after { */ /*fonctionne pas il faut mettre l'icone coeur plein dessous*/
                    /*opacity: 1;
                    outline: 5px solid;
                }
            }*/
        }
    }
}
footer { 
                                // border: 1px solid turquoise;
    // grid-area: 5;
    grid-row: 4;
    grid-column: 1 / span 2;
    background-color: lighten(map-get($color, sombre), 20%);
    padding: 0 0 25px 20px;
    width: 100%;
    @include desktopOnly {
        display: flex;
        flex-direction: row;
        align-items: center;
        width: calc(100% - 25px);
    }
    &.footerMenu {
                                        // border: 1px solid orange;
        width: calc(100% - 20px);
        position: relative;
        top : -50px;
        margin-bottom: -50px;
    }
    > svg {                             
                                // border : 1px solid paleturquoise;
        height: 50px;
    }
    > ul {                                  /*border: palevioletred 1px solid;*/
        @include desktopOnly {
            display: flex;
            flex-direction: row;
            align-items: center;
            justify-content: space-evenly;
            width: 100%;
        }
        > li {
            margin-bottom: 5px ;
            @include desktopOnly {
                margin: 0 15px;
            }
        }
        > li:nth-child(2) a i {                    /*border: 1px solid blueviolet;*/
            font-size: 0.9em;
        }
        > li:nth-child(3) a, li:nth-child(4) a {
            font-family: map-get($weight, thin), Arial, sans-serif;
        }
        > li a{
            color: map-get($color, clair);
            transition: 300ms;
            @include desktopOnly {
                display: flex;
                flex-direction: row;
                align-items: center;
            }
            &:hover {
                color: map-get($color, primary);
                font-style: italic;
            }
            &:active {
                color: map-get($color, secondary);
                font-style: italic;
            }
        }
        >li a i {                               /*border: yellow 1px solid;*/
            padding : 0;
            width: 15px;
            margin-right: 10px;
            
        }
    }
}

/*pour menu*/
#imgMenu {
    width: 100%; //? pourquoi ne prend pas toute la page ?
    object-fit: cover;
    max-height: 300px;
}
.menu {                                 
                                        // border: 1px solid red;
    position: relative;
    top: -50px;
    width: calc(100% - 20px);
    // max-width: ;
    padding: 30px 10px;
    background-color: map-get($color, background);
    border-top-left-radius: 30px;
    border-top-right-radius: 30px;
    > .ligne {                          
                                        // border: 1px solid blue;
        width: 95%;
        justify-content: space-between;
        margin-bottom: 30px;
        grid-column: 2;
        grid-row: 1;
        @include desktopOnly {
            justify-content: space-around;
        }
        > h1 {
            font-family: "Shrikhand", Arial, sans-serif;
        }
    }
    > .sousMenu:nth-child(2) {
        grid-column: 1;
        grid-row: 2;
    }
    > .sousMenu:nth-child(3) {
        grid-column: 2;
        grid-row: 2;
    }
    > .sousMenu:nth-child(4) {
        grid-column: 3;
        grid-row: 2;
    }
    > .bouton:nth-child(5) {
        grid-column: 2;
        grid-row: 3;   
        margin: 20px 0 50px 0; 
    }
    @include desktopOnly {
        display: grid;
        grid-template-rows: 50px 1fr 100px;
		grid-template-columns: 1fr 1fr 1fr;
        align-items: start;
        grid-gap: 20px;
    }
    .bouton {
        padding: 15px 40px;
    }
}
.sousMenu {                     
    // border : 1px solid blue;
    width: 100%;
    margin-bottom: 20px;
    > h2 {
        font-family: map-get($weight, thin), Arial, sans-serif;
    }
    > ul li {                   
                                            // border: 1px solid green;
        width: 95%; //?why
        background-color: map-get($color, clair);
        border-radius: 15px;
        padding: 10px 0 10px 15px;
        margin-bottom: 15px;
        @include shadow;
        position: relative; /* pour le stretch-link*/
        justify-content: space-between;
        overflow: hidden;
        animation: fadein 1.5s forwards;
        &:nth-child(2) {
            animation: fadein 1.5s 0.3s both;
        }
        &:nth-child(3) { /*a vérifier*/
            animation: fadein 1.5s 0.6s both;
        }
        &:nth-child(4) { /*a vérifier*/
            animation: fadein 1.5s 0.9s both;
        }
        &:hover > .ligne {  /*p*/
            transform: translateX(-150%);
        }
        &:hover > .ligne:nth-child(2) .colonne { /*...*/
           opacity: 1;
        }
        &:hover > .ligne:nth-child(3) {   //checkbox      
            transform: translateX(0);           
        }
        &:hover > .ligne:nth-child(3) > i { //i checkbox
            transform: rotate(0);
        }
        &:hover > .colonne {
            // width: 48%;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
            animation: shrink 1200ms forwards;
            & h3 {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            width: 100%;
            // border: 1px solid salmon;
        }
            & p {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            width: 100%;
            // border: 1px solid salmon;
            }
        }
        > .colonne {            
                                    // border: 1px solid orange;
            align-items: flex-start;
            position: relative; /*pour placer animation par rapport à ici*/
            z-index: -1; //* I forgot why -__-" loader anim ?
            width: 80%;  
            // transform: scaleX(2);  //* déforme le texte donc non
            // transform-origin: left;
            transition: 0 1000ms;
            > p {
                margin: 0; //* and why not use reset css ? Because I fucking forgot, ok ? No I'm not talking to myself at all
            }
            
        }
        > .ligne {                          
                                                    // border: 1px solid;
            /*transform: translateX(150%);*/  
            /*position: absolute;            
            right: 0px;  */                 
            transition: 700ms 150ms;  
            transition-timing-function: cubic-bezier(.53,0,.61,1.05);  
            width: 20%;
            position: relative; //*pour que les "..." se cale par rapport à ça
            > .colonne {            
                                    // border: 1px solid pink;
                display: none;
                background-color: map-get($color, clair);
                opacity: 1;        /*à régler pour tous les li*/  
                position: absolute;            
                right: 70%; 
                padding-right: 30%;
                width: 20%; 
                transition: 150ms 650ms;  
                @media screen and (min-width: 550px) and (max-width : 991px) { //!impossible à systhématiser
                    // display: none;
                    border: rgb(9, 211, 9) 1px solid;
                    //? Est-ce que c'est possible de faire une fonction avec la taille du texte ?
                    //? if txt.lenght > x px opacity 1 else 0 ?
                }
            }
            > p {                   
                                        // border: 1px solid blue;
                padding: 20px 0px 0 10px;
                margin: 0/*0 20px 0 16px*/;
                background-color: map-get($color, clair);  
                position: relative;            
                right: 0px;
                width: 100%;
                text-align: left;
                // transform: translateX(0%);              
            }
        }
        > .ligne:nth-child(3) {     
                                                // border: 1px solid #000;   
            position: absolute; 
            right: 0;                
            width: 30%;
            height: 62px;
            margin: -10px 0;
            border-top-right-radius: 15px;
            border-bottom-right-radius: 15px;
            background-color: map-get($color, tertiary); 
            justify-content: center;           
            transform: translateX(110%);
            transition: 1400ms;
            > i {                                   /*border: 1px solid;*/
                color: map-get($color, clair);
                margin: 0; 
                transform: rotate(3turn);    
                transition: 1600ms;           
            }
        }
    }
    /*
    > ul li {                   

    }
    > ul li a {                 border: 1px solid blue;
        width: 100%;
        > .ligne {            border: 1px solid palevioletred;
            position: relative;
            transform: translateX(50px);
            background-color: map-get($color, tertiary);
        }
        > .colonne {           border : 2px solid orange;

        }

    }
    > ul li a > .colonne {        
        align-items: flex-start;
        background-color: map-get($color, clair);
        border-radius: 15px;
        padding: 8px 25px 10px 15px;
        margin-bottom: 15px;
        @include shadow;
        width: 100%;
        margin-right: -50px;
        > .ligne {                border : 1px solid purple;
            width: 100%;
            justify-content: space-between;
            > p {
                margin: 0;
            }
        }
    }
    */
    // > .bouton {
    //     border: 1px solid #000;
    //     margin : 30px 100px; 
    //     text-align: center;
    // }
}


/*test svg*/
#svg { /*div*/
    border: 1px seagreen solid;
    background-color: salmon;
    position: relative;
    &:hover > svg {
        transform: scale(1);
    }
}
svg {
    /*fill: red;*/
    /*stroke: black;*/
    stroke-width: 5px;
    width: 100px;
    height: 100px;
    transform-origin: bottom;
    /*transform: scale(0);*/
    transition: 500ms;
    overflow: hidden; /*n'existe pas pour svg*/
    
}
#svg svg:nth-child(2) {
    border: 1px solid blue;
    position: absolute;
    top: 0;
    left: 10px;
}
/*fin test svg*/

/*test fonction*/
.testFonction p {
    border: black 1px solid;
    color: red;
    width: 100px;
    height: 50px;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    // text-overflow: fade(50px) fade(50px);
}